server:
  port: ${services.api-gateway.port}
management:
  endpoint.gateway.enabled: true
  endpoints.web.exposure.include: "*"
spring:
  application:
    name: api-gateway
    label: ${spring.application.name}
    base-package: ${services.api-gateway.packages}
  main.allow-bean-definition-overriding: true
  cloud:
    gateway:
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins: "http://localhost:4200"
            allowedHeaders: "*"
            allowedMethods:
             - GET
             - POST
             - PATCH
             - PUT
             - DELETE
             - OPTIONS
        add-to-simple-url-handler-mapping: true
      discovery.locator:
        enabled: true
        lowerCaseServiceId: true
      default-filters:
      - SecureHeaders
      - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin Access-Control-Request-Headers Access-Control-Request-Method RETAIN_UNIQUE
      global-filters:
      routes:
      - id: user-service
        #uri: http://localhost:9092
        uri: lb://USER-SERVICE
        predicates:
          - Path=/api/user/**, /api/roles/**, /api/types/**, /api/geo/**
        filters:          
          - AuthGatewayFilter
      - id: auth-service
        uri: lb://AUTH-SERVICE
        predicates:
          - Path=/api/auth/**
      - id: enquiry-service
        uri: lb://ENQUIRY-SERVICE
        predicates:
          - Path=/api/enquiry/**
      - id: product-service
        uri: lb://PRODUCT-SERVICE
        predicates:
          - Path=/api/product/**
      - id: inventory-service
        uri: lb://INVENTORY-SERVICE
        predicates:
          - Path=/api/inventory/**
      - id: sales-service
        uri: lb://SALES-SERVICE
        predicates:
          - Path=/api/sales/**
      - id: order-service
        uri: lb://ORDER-SERVICE
        predicates:
          - Path=/api/order/**
      - id: report-service
        uri: lb://REPORT-SERVICE
        predicates:
          - Path=/api/report/**
