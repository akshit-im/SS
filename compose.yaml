version: "3.8"
name: mavericks
services:
  zipkin:
    container_name: zipkin
    hostname: zipkin.test.com
    ports:
      - "9411:9411"
    image: openzipkin/zipkin
    networks:
      - my_network
  ubuntu:
    container_name: ubuntu
    image: ubuntu
    command: ["sleep", "infinity"]
    networks:
      - my_network
  mysql-server:
    container_name: mysql-server
    hostname: mysql.test.com
    image: mysql
    restart: always
    environment:
      MYSQL_DATABASE: MAVERICKS
      MYSQL_ROOT_PASSWORD: ADIrag@1210
    volumes: 
      - mysql_data:/var/lib/mysql
    networks:
      - my_network
  discovery-server:
    container_name: discovery-server
    hostname: discovery.test.com
    build: ./discovery-server/
    image: discovery-server
    ports:
      - "8080:80"
    networks:
      - my_network
    depends_on:
      - zipkin
  config-server:
    container_name: config-server    
    hostname: config.test.com
    build: ./config-server/
    image: config-server
    networks:
      - my_network
    depends_on:
      mysql-server:
        condition: service_started
      discovery-server:
        condition: service_healthy
    restart: on-failure
  api-gateway:
    container_name: api-gateway
    hostname: api-gateway.test.com
    build: ./api-gateway/
    image: api-gateway
    ports:
      - "80:80"
    networks:
     - my_network
    depends_on:
      config-server:
        condition: service_healthy
    restart: on-failure
  auth-service:
    container_name: auth-service
    hostname: auth-service.test.com
    build: ./auth-service/
    image: auth-service
    networks:
     - my_network
    depends_on:
      config-server:
        condition: service_healthy
    restart: on-failure
  user-service:
    container_name: user-service
    hostname: user-service.test.com
    build: ./user-service/
    image: user-service
    volumes: 
      - web_data:/home/mavericks/data/web_data
    networks:
      - my_network
    depends_on:
      config-server:
        condition: service_healthy
    restart: on-failure
  order-service:
    container_name: order-service
    hostname: order-service.test.com
    build: ./order-service/
    image: order-service
    networks:
      - my_network
    depends_on:
      config-server:
        condition: service_healthy
    restart: on-failure
volumes:
  web_data:
  mysql_data:
networks:
  my_network:
    driver: bridge